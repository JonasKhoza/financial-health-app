{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonas Khoza\\\\Documents\\\\Financial Health App\\\\financial_health_app\\\\frontend\\\\src\\\\components\\\\Quiz\\\\QuizItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport c from \"./styles/quiz.module.css\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizItem = ({\n  questions,\n  getQuizData\n}) => {\n  _s();\n  var _question$options;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const handleChange = (e, questionId) => {\n    setAnswers({\n      ...answers,\n      [questionId]: e.target.value\n    });\n  };\n  const handleNext = () => {\n    if (answers[questions[currentQuestion].id] !== undefined) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n  const handlePrevious = () => {\n    setCurrentQuestion(currentQuestion - 1);\n  };\n  const handleSubmit = () => {\n    if (answers[questions[currentQuestion].id] !== undefined) {\n      // Handle form submission here\n      getQuizData(answers);\n    }\n  };\n  const question = questions[currentQuestion];\n  const isAnswered = answers[question.id] !== undefined && answers[question.id] !== \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.question_container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), question.type === \"slider\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        value: answers[question.id] || 0,\n        onChange: e => handleChange(e, question.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), question.type === \"multiple-choice\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: c.options,\n        children: (_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: c.radio_choices,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${question.id}`,\n            value: option,\n            checked: answers[question.id] === option,\n            onChange: e => handleChange(e, question.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), option]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), question.type === \"currency\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: answers[question.id] || \"\",\n        onChange: e => handleChange(e, question.id),\n        placeholder: \"R\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), question.type === \"percent\" && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: answers[question.id] || \"\",\n        onChange: e => handleChange(e, question.id),\n        placeholder: \"Enter percentage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.navigation,\n      children: [currentQuestion > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: c.nav_button,\n        onClick: handlePrevious,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), currentQuestion < questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: `${c.nav_button} ${!isAnswered ? c.disabled : \"\"}`,\n        onClick: handleNext,\n        disabled: !isAnswered,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        className: c.submit_button,\n        onClick: handleSubmit,\n        disabled: !isAnswered,\n        variant: \"contained\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.progress,\n      children: [\"Question \", currentQuestion + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(QuizItem, \"lNbKV3TtuVdT3d7asJybKK3QAf4=\");\n_c = QuizItem;\nexport default QuizItem;\nvar _c;\n$RefreshReg$(_c, \"QuizItem\");","map":{"version":3,"names":["React","useState","c","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizItem","questions","getQuizData","_s","_question$options","currentQuestion","setCurrentQuestion","answers","setAnswers","handleChange","e","questionId","target","value","handleNext","id","undefined","handlePrevious","handleSubmit","question","isAnswered","children","className","question_container","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","options","map","option","index","radio_choices","name","checked","placeholder","navigation","variant","nav_button","onClick","length","disabled","submit_button","progress","_c","$RefreshReg$"],"sources":["C:/Users/Jonas Khoza/Documents/Financial Health App/financial_health_app/frontend/src/components/Quiz/QuizItem.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport c from \"./styles/quiz.module.css\";\r\nimport { Question } from \"../../models/Question.model\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst QuizItem: React.FC<{\r\n  questions: Question[];\r\n  getQuizData: (quiz: any) => void;\r\n}> = ({ questions, getQuizData }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState<{ [key: number]: any }>({});\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\r\n    questionId: number\r\n  ) => {\r\n    setAnswers({ ...answers, [questionId]: e.target.value });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (answers[questions[currentQuestion].id] !== undefined) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentQuestion(currentQuestion - 1);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (answers[questions[currentQuestion].id] !== undefined) {\r\n      // Handle form submission here\r\n      getQuizData(answers);\r\n    }\r\n  };\r\n\r\n  const question = questions[currentQuestion];\r\n  const isAnswered =\r\n    answers[question.id] !== undefined && answers[question.id] !== \"\";\r\n\r\n  return (\r\n    <>\r\n      <div className={c.question_container}>\r\n        <h2>{question.question}</h2>\r\n        {question.type === \"slider\" && (\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={answers[question.id] || 0}\r\n            onChange={(e) => handleChange(e, question.id)}\r\n          />\r\n        )}\r\n        {question.type === \"multiple-choice\" && (\r\n          <div className={c.options}>\r\n            {question.options?.map((option, index) => (\r\n              <label key={index} className={c.radio_choices}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${question.id}`}\r\n                  value={option}\r\n                  checked={answers[question.id] === option}\r\n                  onChange={(e) => handleChange(e, question.id)}\r\n                />\r\n                {option}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {question.type === \"currency\" && (\r\n          <input\r\n            type=\"number\"\r\n            value={answers[question.id] || \"\"}\r\n            onChange={(e) => handleChange(e, question.id)}\r\n            placeholder=\"R\"\r\n          />\r\n        )}\r\n        {question.type === \"percent\" && (\r\n          <input\r\n            type=\"number\"\r\n            value={answers[question.id] || \"\"}\r\n            onChange={(e) => handleChange(e, question.id)}\r\n            placeholder=\"Enter percentage\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={c.navigation}>\r\n        {currentQuestion > 0 && (\r\n          <Button\r\n            variant=\"contained\"\r\n            className={c.nav_button}\r\n            onClick={handlePrevious}\r\n          >\r\n            Previous\r\n          </Button>\r\n        )}\r\n        {currentQuestion < questions.length - 1 ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            className={`${c.nav_button} ${!isAnswered ? c.disabled : \"\"}`}\r\n            onClick={handleNext}\r\n            disabled={!isAnswered}\r\n          >\r\n            Next\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className={c.submit_button}\r\n            onClick={handleSubmit}\r\n            disabled={!isAnswered}\r\n            variant=\"contained\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div className={c.progress}>\r\n        Question {currentQuestion + 1} of {questions.length}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}